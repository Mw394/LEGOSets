@model DTO.Model.DTOSetBrickLink

@{
    ViewBag.Title = "SetBrickLinkCreate";
}

<h2>Add Brick</h2>

@using (Html.BeginForm("SetBrickLinkCreate", "LEGO", FormMethod.Post))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.LEGOBrick, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.LEGOBrickID, new SelectList(ViewBag.LEGOBricks, "LEGOBrickID", "BrickInfo"), new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LEGOBrickID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-10">
            @Html.HiddenFor(model => model.SetBrickLinkID, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @Name = "", @Disabled = true } })
            @Html.ValidationMessageFor(model => model.SetBrickLinkID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-10">
            @Html.HiddenFor(model => model.LEGOSetID, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @Name = "", @Disabled = true } })
            @Html.ValidationMessageFor(model => model.LEGOSetID, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-10">
            @Html.HiddenFor(model => model.NewObject, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @Name = "", @Disabled = true } })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

@if (!ViewBag.NEW)
{
    <div>
        @Html.ActionLink(linkText: "Cancel",actionName: "ShowLEGOSetEdit", controllerName: "LEGO", routeValues: new { id = ViewBag.LEGOSet }, htmlAttributes: null)
    </div>
}
else
{
    <div>
        @Html.ActionLink("Cancel", "ShowLEGOSetCreate")
    </div>
}


